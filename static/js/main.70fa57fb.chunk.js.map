{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/PhonebookForm/PhonebookForm.module.css","components/Container/Contaiter.js","components/PhonebookForm/PhonebookForm.js","components/ContactList/PhonebookList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/PhonebookList.module.css"],"names":["module","exports","Container","children","className","s","container","PhonebookForm","onAddContact","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","reset","form","onSubmit","preventDefault","label","input","type","pattern","title","required","onChange","placeholder","options","delimiter","blocks","btn","PhonebookList","contacts","onDeleteContact","list","map","id","listItem","color","size","onClick","Filter","onChangeFilter","filter","App","JSON","parse","localStorage","getItem","setContacts","useEffect","setItem","stringify","setFilter","contact","shortid","generate","find","toLowerCase","toast","trim","info","test","prevContacts","sort","a","b","error","length","normalizedFilter","includes","getVisibleContacts","contactId","autoClose","theme","toastStyle","backgroundColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70fa57fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__y1o24\",\"input\":\"Filter_input__3ZpgM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2ZSru\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"PhonebookForm_form__3NUW9\",\"label\":\"PhonebookForm_label__2d7zO\",\"input\":\"PhonebookForm_input__JdvuE\",\"btn\":\"PhonebookForm_btn__1hjGi\"};","import s from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { useState } from 'react';\nimport s from './PhonebookForm.module.css';\nimport Cleave from 'cleave.js/react';\n\nexport default function PhonebookForm({ onAddContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onAddContact(name, number);\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Ivan Ivanov\"\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <Cleave\n          options={{ delimiter: '-', blocks: [3, 2, 2] }}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n          className={s.input}\n          placeholder=\"111-11-11\"\n        />\n      </label>\n\n      <button type=\"submit\" className={s.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport { BsXSquareFill } from 'react-icons/bs';\n\nimport PropTypes from 'prop-types';\nimport s from './PhonebookList.module.css';\n\nexport default function PhonebookList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.listItem} key={id}>\n          {name + ':' + number}\n          <BsXSquareFill\n            color=\"red\"\n            size=\"20px\"\n            className={s.btn}\n            type=\"button\"\n            name=\"delete\"\n            onClick={() => onDeleteContact(id)}\n          >\n            delete\n          </BsXSquareFill>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nPhonebookList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <div className={s.filter}>\n      Find contacts by name{' '}\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChangeFilter}\n        placeholder=\"Enter name\"\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Container from './components/Container';\nimport PhonebookForm from './components/PhonebookForm';\nimport PhonebookList from './components/ContactList';\nimport Filter from './components/Filter';\nimport shortid from 'shortid';\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(localStorage.getItem('contacts')) ?? [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const [filter, setFilter] = useState('');\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      toast(`🤔 ${name} is already in contacts.`);\n    } else if (contacts.find(contact => contact.number === number)) {\n      toast(`🤔 ${number} is already in contacts.`);\n    } else if (name.trim() === '' || number.trim() === '') {\n      toast.info(\"😱 Enter the contact's name and number phone!\");\n    } else if (!/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number)) {\n      toast.error('💩 Enter the correct number phone!');\n    } else {\n      setContacts(prevContacts =>\n        [contact, ...prevContacts].sort((a, b) => {\n          if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n          if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n          return 0;\n        }),\n      );\n    }\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(({ id }) => id !== contactId));\n  };\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <PhonebookForm onAddContact={addContact} />\n\n      <h2>Contacts</h2>\n      {contacts.length > 1 && (\n        <Filter value={filter} onChangeFilter={changeFilter} />\n      )}\n      {contacts.length > 0 ? (\n        <PhonebookList\n          contacts={getVisibleContacts()}\n          onDeleteContact={deleteContact}\n        />\n      ) : (\n        <p>Your phonebook is empty. Please add contact.</p>\n      )}\n      <ToastContainer\n        autoClose={3000}\n        theme=\"colored\"\n        toastStyle={{ backgroundColor: 'red' }}\n      />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PhonebookList_list__3GWJ3\",\"listItem\":\"PhonebookList_listItem__rmYD5\",\"btn\":\"PhonebookList_btn__1Sc5p\"};"],"sourceRoot":""}